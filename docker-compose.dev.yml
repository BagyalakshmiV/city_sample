version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: sqlbot-db-dev
    environment:
      POSTGRES_DB: sqlbot
      POSTGRES_USER: sqlbot
      POSTGRES_PASSWORD: sqlbot_password
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sqlbot"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sqlbot-network

  # FastAPI Backend (Development)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: sqlbot-backend-dev
    environment:
      - DATABASE_URL=postgresql://sqlbot:sqlbot_password@database:5432/sqlbot
      - CORS_ORIGINS=http://localhost:3000,http://frontend:80
      - ENVIRONMENT=development
    env_file:
      - ./backend/.env
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - backend_cache_dev:/app/.cache
    command: ["uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
    networks:
      - sqlbot-network
    restart: unless-stopped

  # React Frontend (Development)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: sqlbot-frontend-dev
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - sqlbot-network
    restart: unless-stopped

  # Redis (for caching)
  redis:
    image: redis:7-alpine
    container_name: sqlbot-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sqlbot-network
    restart: unless-stopped

volumes:
  postgres_data_dev:
  redis_data_dev:
  backend_cache_dev:

networks:
  sqlbot-network:
    driver: bridge